<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>br.com.contability</groupId>
	<artifactId>contability</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<!-- <packaging>war</packaging> -->
	<packaging>war</packaging>

	<name>Contability</name>
	<description>Web site de controle financeiro pessoal</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.1.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>

		<!-- WebStarter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>

			<!-- MEXI AQUI -->
			<!-- <exclusions> <exclusion> <groupId>org.springframework.boot</groupId> 
				<artifactId>spring-boot-starter-tomcat</artifactId> </exclusion> </exclusions> -->

		</dependency>

		<!-- MEXI AQUI -->
		<!-- <dependency> <groupId>javax.servlet</groupId> <artifactId>javax.servlet-api</artifactId> 
			<scope>provided</scope> </dependency> -->

		<!-- Devtools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<!-- MySQL -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Thymeleaf -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- SpringData JPA -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- SpringSecurity -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity4</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!-- JasperReport -->
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>6.3.0</version>
		</dependency>

		<!-- Java 8 LocalDate -->
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-java8time</artifactId>
		</dependency>

		<!-- Converter LocalDate -->
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>

	</dependencies>

	<!-- EXCLUIR -->
	<!-- <build> <plugins> <plugin> <groupId>org.springframework.boot</groupId> 
		<artifactId>spring-boot-maven-plugin</artifactId> </plugin> </plugins> </build> 
		TEST <profiles> <profile> When built in OpenShift the 'openshift' profile 
		will be used when invoking mvn. Use this profile for any OpenShift specific 
		customization your app will need. By default that is to put the resulting 
		archive into the 'webapps' folder. http://maven.apache.org/guides/mini/guide-building-for-different-environments.html 
		<id>openshift</id> <build> <finalName>yourAppName</finalName> <plugins> <plugin> 
		<artifactId>maven-war-plugin</artifactId> <version>2.1.1</version> <configuration> 
		<outputDirectory>webapps</outputDirectory> <warName>ROOT</warName> </configuration> 
		</plugin> </plugins> </build> </profile> </profiles> -->

	<!-- ADICINEI ABAIXO TAMBM. E COMENTEI ACIMA -->
	<!-- <build> <plugins> <plugin> <groupId>org.springframework.boot</groupId> 
		<artifactId>spring-boot-maven-plugin</artifactId> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> 
		<artifactId>maven-war-plugin</artifactId> <version>2.3</version> <configuration> 
		<failOnMissingWebXml>false</failOnMissingWebXml> <outputDirectory>target</outputDirectory> 
		<warName>ROOT</warName> </configuration> </plugin> </plugins> </build> <repositories> 
		<repository> <id>spring-releases</id> <url>https://repo.spring.io/libs-release</url> 
		</repository> </repositories> <pluginRepositories> <pluginRepository> <id>spring-releases</id> 
		<url>https://repo.spring.io/libs-release</url> </pluginRepository> </pluginRepositories> -->

	<!-- COLOQUEI AQUI -->
	<scm>
		<url>https://github.com/codecentric/springboot-sample-app</url>
		<connection>scm:git:git://github.com/codecentric/springboot-sample-app.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/codecentric/springboot-sample-app.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<build>
		<finalName>app</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>travis</id>
			<activation>
				<property>
					<name>env.TRAVIS</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.7.5.201505241946</version>
						<configuration>
							<excludes>
								<exclude>**/Application.class</exclude>
							</excludes>
						</configuration>
						<executions>
							<!-- Prepares the property pointing to the JaCoCo runtime agent which 
								is passed as VM argument when Maven the Surefire plugin is executed. -->
							<execution>
								<id>pre-unit-test</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>

							<!-- Ensures that the code coverage report for unit tests is created 
								after unit tests have been run. -->
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<version>4.1.0</version>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
